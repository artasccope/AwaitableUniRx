#if NET40PLUS

using System.Runtime.CompilerServices;

[assembly: TypeForwardedTo(typeof(StateMachineAttribute))]

#else

namespace System.Runtime.CompilerServices
{
    /// <summary>
    /// Allows you to determine whether a method is a state machine method.
    /// </summary>
    [Serializable]
    [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]
    public class StateMachineAttribute : Attribute
    {
        /// <summary>
        /// This is the backing field for the <see cref="StateMachineType"/> property.
        /// </summary>
        private readonly Type _stateMachineType;

        /// <summary>
        /// Initializes a new instance of the <see cref="StateMachineAttribute"/> class.
        /// </summary>
        /// <param name="stateMachineType">
        /// The type object for the underlying state machine type that was generated by the compiler to implement the
        /// state machine method.
        /// </param>
        public StateMachineAttribute(Type stateMachineType)
        {
            _stateMachineType = stateMachineType;
        }

        /// <summary>
        /// Gets the type object for the underlying state machine type that was generated by the compiler to implement
        /// the state machine method.
        /// </summary>
        /// <value>
        /// The type object for the underlying state machine type that was generated by the compiler to implement the
        /// state machine method.
        /// </value>
        public Type StateMachineType
        {
            get
            {
                return _stateMachineType;
            }
        }
    }
}

#endif
